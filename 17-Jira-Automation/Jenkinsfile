pipeline {
  agent any

  parameters {
    choice(name: 'PROJECT',    choices: ['System Team - Platform Engineering (STPE)'],     description: "Please enter the Project name")
    choice(name: 'Issue Type', choices: ['Story'],                                     description: "Enter the Issue type")
    string(name: 'Summary',    defaultValue: '',                                       description: "Issue Summary")
    choice(name: 'Assignee',   choices: ['Abhishek Alimchandani','Vandan Banda'],     description: "Select whom should it be assigned to")
    choice(name: 'Reporter',   choices: ['Tammy Reid'],                               description: "Select your reporter")
    choice(name: 'Epic Link',  choices: ['Jenkins Stabilization & Performance Enhancements'], description: "Enter your Epic Link")
    string(name: 'Description', defaultValue: '',                                      description: "Enter the entire description about the Story")
  }

  environment {
    JIRA_BASE_URL = 'https://abhishekalimchandani1624.atlassian.net'
    JIRA_USER     = 'abhishekalimchandani1624@gmail.com'
    JIRA_TOKEN    = 'ATATT3xFfGF0d9NMW5qDmiGFjKWg9VTEEG4nfjICwwm7SvvbDUYxhkzYY-XZ0OUcr-â€¦'
  }

  stages {
    stage('Create Jira Story') {
      steps {
        // ensure your workspace is populated
        checkout scm

        script {
          // 1) load helper
          def jira = load "${env.WORKSPACE}/17-Jira-Automation/jiraUtil.groovy"

          // 2) call it with all your parameters
          def story = jira.createJiraStory(
            env.JIRA_BASE_URL,
            env.JIRA_USER,
            env.JIRA_TOKEN,
            params.PROJECT,
            params['Issue Type'],
            params.Summary,
            params.Assignee,
            params.Reporter,
            params['Epic Link'],
            params.Description
          )

          // 3) echo both key and URL
          echo "âœ… Created JIRA Story ${story.key}"
          echo "ðŸ”— URL: ${story.self}"
        }
      }
    }
  }
}
