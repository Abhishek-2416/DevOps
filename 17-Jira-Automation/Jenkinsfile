// pipeline {
//   agent any

//   parameters {
//     choice( name: 'PROJECT',     choices: ['System Team - Platform Engineering (STPE)'],    description: 'Please enter the Project name')
//     choice( name: 'Issue Type',  choices: ['Story'],                                      description: 'Enter the Issue type')
//     string( name: 'Summary',     defaultValue: '',                                        description: 'Issue Summary')
//     choice( name: 'Assignee',    choices: ['Abhishek Alimchandani','Vandan Banda'],      description: 'Select the Assignee')
//     choice( name: 'Reporter',    choices: ['Tammy Reid'],                                  description: 'Select the Reporter')
//     choice( name: 'Epic Link',   choices: ['Jenkins Stabilization & Performance Enhancements'], description: 'Enter the Epic Link')
//     string( name: 'Description', defaultValue: '',                                        description: 'Enter the Story description')
//   }

//   environment {
//     JIRA_BASE_URL = 'https://abhishekalimchandani1624.atlassian.net'
//     JIRA_USER     = 'abhishekalimchandani1624@gmail.com'
//     // Store your API token as a Secret Text credential with ID 'jira-api-token-id'
//     JIRA_TOKEN    = credentials('jira-api-token-id')
//   }

//   stages {
//     stage('Create Jira Story') {
//       steps {
//         script {
//           // 1) cd into the folder containing both Jenkinsfile & helper
//           dir('17-Jira-Automation') {
//             // 2) load the helper; this gives you an object with createJiraStory()
//             def jira = load 'jiraUtil.groovy'

//             // 3) call the helper method on that object
//             def story = jira.createJiraStory(
//               env.JIRA_BASE_URL,
//               env.JIRA_USER,
//               env.JIRA_TOKEN,
//               params.PROJECT,
//               params['Issue Type'],
//               params.Summary,
//               params.Assignee,
//               params.Reporter,
//               params['Epic Link'],
//               params.Description
//             )

//             // 4) confirm in console
//             echo "âœ… Created JIRA Story ${story.key}"
//             echo "ðŸ”— URL: ${story.self}"
//           }
//         }
//       }
//     }
//   }
// }

import groovy.json.JsonOutput
import groovy.json.JsonSlurper

pipeline {
  agent any

  parameters {
    choice( name: 'PROJECT',     choices: ['System Team - Platform Engineering (STPE)'],     description: 'Select the Project' )
    choice( name: 'Issue Type',  choices: ['Story'],                                      description: 'Enter the Issue Type' )
    string( name: 'Summary',     defaultValue: '',                                         description: 'Issue Summary' )
    choice( name: 'Assignee',    choices: ['Abhishek Alimchandani','Vandan Banda'],       description: 'Select the Assignee' )
    choice( name: 'Reporter',    choices: ['Tammy Reid'],                                  description: 'Select the Reporter' )
    choice( name: 'Epic Link',   choices: ['Jenkins Stabilization & Performance Enhancements'], description: 'Enter the Epic Link Key' )
    string( name: 'Description', defaultValue: '',                                         description: 'Enter the Story Description' )
  }

  environment {
    // your constants.jiraUrl under the hood
    JIRA_BASE_URL = 'https://abhishekalimchandani1624.atlassian.net'
    // a Jenkins credential (username + API token) with ID 'ServiceJenkins'
    // configured under Manage Jenkins â†’ Credentials
    JIRA_CRED_ID  = 'ServiceJenkins'
  }

  stages {
    stage('Create Jira Story') {
      steps {
        script {
          import groovy.json.JsonOutput
          import groovy.json.JsonSlurper

          // --- 1) Helper in the exact shape you provided, minus check & labels ---
          def createStory = { projectKey, summary, description, assignee ->
            def urlCreate   = "${constants.jiraUrl}/rest/api/2/issue"
            def requestBody = JsonOutput.toJson([
              fields: [
                project   : [ key: projectKey ],
                summary   : summary,
                description: description,
                issuetype : [ name: "Story" ]
              ]
            ])

            try {
              // HTTP Request plugin wrapper
              def resp = httpRequestJson(
                'POST',
                urlCreate,
                JIRA_CRED_ID,
                requestBody
              )
              def json = new JsonSlurper().parseText(resp.content)
              def storyKey = json.key
              println "Jira Story Created: ${storyKey}"

              // assignStory is your existing helper
              assignStory(storyKey, assignee)

              return "${constants.jiraUrl}/browse/${storyKey}"
            } catch (e) {
              // your existing error-reporting helper
              sendChat(
                "Error creating JIRA Story: ${e.message}",
                constants.getJenkinsSupportNotificationsChatRoomId()
              )
              error("JIRA createStory failed: ${e.message}")
            }
          }

          // --- 2) Pull the real key (STPE) out of the display string ---
          def rawProject = params.PROJECT
          def projectKey = rawProject.replaceAll(/^.*\((.*)\)$/, '$1')
          echo "Using project key: ${projectKey}"

          // --- 3) Call your helper with exactly the 4 params you wanted ---
          def storyUrl = createStory(
            projectKey,
            params.Summary,
            params.Description,
            params.Assignee
          )

          // --- 4) Output the final URL ---
          echo "âœ… Story URL: ${storyUrl}"
        }
      }
    }
  }
}
